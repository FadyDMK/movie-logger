import{p as j,t as b,e as G,a as f,s as y,c as ne}from"../chunks/Cp7EwV3K.js";import{i as H}from"../chunks/C6gcHL8Z.js";import{R as K,_ as A,W as i,V as s,S,d as e,a8 as ve,X as r,Y as ce,a0 as w,T as Q,a9 as q,e as de}from"../chunks/BbjLgv-f.js";import{i as Z}from"../chunks/Nn1O9p7-.js";import{e as me,i as pe}from"../chunks/B2D20eJu.js";import{r as V,a as ue,s as fe,b as X}from"../chunks/DtMnDJjb.js";import{o as ge}from"../chunks/C_QQLzkl.js";import"../chunks/BmfEcAX3.js";import{b as _e}from"../chunks/DK56ITja.js";import{b as he,M as be,C as xe,T as ye}from"../chunks/l17r96g0.js";var we=b('<small class="svelte-13oxm5n"> </small>'),Ie=b('<div class="container svelte-13oxm5n"><form class="svelte-13oxm5n"><h2 class="svelte-13oxm5n">Log Your Movie</h2> <div class="form-item svelte-13oxm5n"><label for="status" class="svelte-13oxm5n">Status</label> <select id="status" name="status" required class="svelte-13oxm5n"><option class="svelte-13oxm5n">Watching</option><option class="svelte-13oxm5n">Completed</option><option class="svelte-13oxm5n">Dropped</option><option class="svelte-13oxm5n">Plan to Watch</option></select></div> <div class="form-item svelte-13oxm5n"><label for="rating" class="svelte-13oxm5n">Rating</label> <input type="number" id="rating" name="rating" min="1" max="10" placeholder="Rate from 1 to 10" required> <!></div> <input type="hidden" name="imdbID" class="svelte-13oxm5n"> <input type="hidden" name="_method" value="PUT" class="svelte-13oxm5n"> <button type="submit" class="submit-button svelte-13oxm5n">Update</button></form></div>');function Te(C,g){K(g,!1);let c=j(g,"form",8),t=j(g,"movie",8),d=A(t().status),I=A(t().rating);async function T(o){o.preventDefault();const n=await fetch(`/api/log/${t().id}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({status:e(d),rating:e(I),imdbId:t().imdbID,userId:t().userId})});if(!n.ok){const h=await n.json();console.error("Failed to update log",h);return}console.log("Log updated successfully"),window.location.href="/log"}H();var D=Ie(),$=i(D),x=s(i($),2),L=s(i(x),2);S(()=>{e(d),ve(()=>{})});var P=i(L);P.value=(P.__value="watching")==null?"":"watching";var M=s(P);M.value=(M.__value="completed")==null?"":"completed";var a=s(M);a.value=(a.__value="dropped")==null?"":"dropped";var v=s(a);v.value=(v.__value="plan-to-watch")==null?"":"plan-to-watch",r(L),r(x);var m=s(x,2),l=s(i(m),2);V(l);var u=s(l,2);{var p=o=>{var n=we(),h=i(n,!0);r(n),S(()=>{var k;return y(h,(k=c())==null?void 0:k.message)}),f(o,n)};Z(u,o=>{var n;(n=c())!=null&&n.error&&o(p)})}r(m);var _=s(m,2);V(_),s(_,2),ce(2),r($),r(D),S(()=>{var o;ue(l,1,(o=c())!=null&&o.error?"field-error":"","svelte-13oxm5n"),fe(_,t().imdbID)}),he(L,()=>e(d),o=>w(d,o)),_e(l,()=>e(I),o=>w(I,o)),G("submit",$,T),f(C,D),Q()}var De=b('<div class="no-movies svelte-1cel0cx">No movies added yet. Start searching and logging!</div>'),$e=b('<button class="svelte-1cel0cx">Update</button>'),Le=b("<!> <!>",1),Pe=b('<div class="movie-card svelte-1cel0cx"><img loading="lazy" class="svelte-1cel0cx"> <div class="movie-info svelte-1cel0cx"><h2> </h2> <p> </p> <p class="rating svelte-1cel0cx"> </p> <p class="rating svelte-1cel0cx"> </p> <p class="status svelte-1cel0cx"> </p></div> <div class="actions svelte-1cel0cx"><!> <button class="svelte-1cel0cx">Delete</button></div></div>'),Me=b('<h1 class="header svelte-1cel0cx">Your Movie Log</h1> <div class="movie-grid svelte-1cel0cx"></div>',1);function Fe(C,g){K(g,!1);let c=A([]),t=A([]),d=[],I=j(g,"form",8),T=j(g,"data",8);T().logs&&w(t,Array.isArray(T().logs)?T().logs:[]),e(t)===void 0||!Array.isArray(e(t))?console.error("No logs found or logs is not an array"):e(t).forEach(a=>{d.push(a.mediaId)});async function D(a,v){const m=await fetch(`/api/log/${a}`,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:v})});if(!m.ok){const l=await m.json();console.error("Failed to delete log",l);return}console.log("Log deleted successfully"),d=d.filter(l=>l!==a),w(t,e(t).filter(l=>l.mediaId!==a)),w(c,e(c).filter(l=>l.imdbID!==a)),window.location.href="/log"}async function $(){w(c,await Promise.all(d.map(async a=>{const v=await fetch(`http://www.omdbapi.com/?i=${a}&apikey=4b24ca2c`);if(!v.ok)throw new Error("Failed to fetch movies");return await v.json()})))}ge($),H();var x=ne(),L=q(x);{var P=a=>{var v=De();f(a,v)},M=a=>{var v=Me(),m=s(q(v),2);me(m,5,()=>e(c),pe,(l,u,p)=>{var _=Pe(),o=i(_),n=s(o,2),h=i(n),k=i(h,!0);r(h);var E=s(h,2),ee=i(E);r(E);var N=s(E,2),te=i(N);r(N);var U=s(N,2),ae=i(U);r(U);var F=s(U,2),se=i(F,!0);r(F),r(n);var W=s(n,2),J=i(W);be(J,{basic:!0,small:!0,children:(re,ke)=>{var O=Le(),z=q(O);xe(z,{class:"modal-content",children:(Y,ie)=>{const R=de(()=>{var B;return{...e(t)[p],imdbID:(B=e(c)[p])==null?void 0:B.imdbID,rating:e(t)[p].rating??0}});Te(Y,{get form(){return I()},get movie(){return e(R)}})},$$slots:{default:!0}});var le=s(z,2);ye(le,{children:(Y,ie)=>{var R=$e();f(Y,R)},$$slots:{default:!0}}),f(re,O)},$$slots:{default:!0}});var oe=s(J,2);r(W),r(_),S(()=>{X(o,"src",e(u).Poster),X(o,"alt",e(u).Title),y(k,e(u).Title),y(ee,`${e(u).Year??""} • ${e(u).Type??""}`),y(te,`IMDB rating: ⭐ ${e(u).imdbRating??"N/A"}`),y(ae,`Your rating: ${e(t)[p].rating??""}⭐`),y(se,e(t)[p].status)}),G("click",oe,()=>D(e(t)[p].id,e(t)[p].userId)),f(l,_)}),r(m),f(a,v)};Z(L,a=>{e(c).length?a(M,!1):a(P)})}f(C,x),Q()}export{Fe as component};
